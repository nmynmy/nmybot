import json
from gettext import find
from io import BytesIO

import telebot
from telebot import types
import requests
import bs4
import random
import time

import BotGames
from menuBot import Menu
import DZ

bot = telebot.TeleBot('5205176408:AAEecSdYmlIEzCZeWXg_Phb-aACPrXK8rvo')
game21 = None

@bot.message_handler(commands="start")
def command(message, res=False):
    txt_message = f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –±–æ—Ç –ì—Ä–∏–≥–æ—Ä–∏—è –Ω–∞ —è–∑—ã–∫–µ Python"
    bot.send_message(message.chat.id, text=txt_message,
                     reply_markup=Menu.getMenu("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é").markup)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global game21

    chat_id = message.chat.id
    ms_text = message.text

    result = goto_menu(chat_id, ms_text)
    if result :
        return
    if Menu.cur_menu != None and ms_text in Menu.cur_menu.buttons:
        if ms_text == "üìö –ü–æ–º–æ—â—å":
            send_help(chat_id)
        elif ms_text == 'üéÆ –ü—Ä–∏–¥—É–º–∞—Ç—å –Ω–∏–∫':
            bot.send_message(chat_id, text=get_nickname())
        elif ms_text == 'üê∂ –ü—Ä–∏—Å–ª–∞—Ç—å —Å–æ–±–∞–∫—É':
            bot.send_photo(chat_id, photo=get_dogURL(), caption="–í–æ—Ç —Ç–µ–±–µ —Å–æ–±–∞—á–∫–∞")

        elif ms_text == 'üòÖ –ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç':
            bot.send_message(chat_id, text=get_anekdot())

        elif ms_text == 'üé¨ –ü—Ä–∏—Å–ª–∞—Ç—å —Ñ–∏–ª—å–º':
            send_film(chat_id)

        elif ms_text == 'üéÆ –°–ª—É—á–∞–π–Ω–∞—è –∏–≥—Ä–∞':
            bot.send_message(chat_id, text=get_game())

        elif ms_text == "–£–≥–∞–¥–∞–π –∫—Ç–æ?":
            get_ManOrNot(chat_id)

        elif ms_text == "–ö–∞—Ä—Ç—É!" :
            if game21 == None :
                goto_menu(chat_id, "‚¨Ö –í—ã—Ö–æ–¥")
                return
            text_game = game21.get_cards(1)
            bot.send_media_group(chat_id, media=getMediaCards(game21))
            bot.send_message(chat_id, text=text_game)

        elif ms_text == "–°—Ç–æ–ø!":
            game21 = None
            goto_menu(chat_id, "‚¨Ö –í—ã—Ö–æ–¥")
            return

        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 1" :
            DZ.dz1(bot, chat_id)
        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 2" :
            DZ.dz2(bot, chat_id)
        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 3" :
            DZ.dz3(bot, chat_id)
        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 4,5" :
            DZ.dz45(bot, chat_id)
        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 6" :
            DZ.dz6(bot, chat_id)
        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 7.1" :
            DZ.dz7n(bot, chat_id)
        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 7.2":
            DZ.dz7a(bot, chat_id)
        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 8" :
            DZ.dz8(bot, chat_id)
        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 9.1" :
            DZ.dz91(bot, chat_id)
        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 9.2" :
            DZ.dz92(bot, chat_id)
        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 10" :
            DZ.dz10(bot, chat_id)

    else:
        bot.send_message(chat_id, text="–ú–Ω–µ –∂–∞–ª—å, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É:" + ms_text)
        goto_menu(chat_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    pass
    if call.data == "ManorNot_GoToSite":
        bot.answer_callback_query(call.id)


def goto_menu(chat_id, name_menu) :
    if name_menu == "‚¨Ö –í—ã—Ö–æ–¥" and Menu.cur_menu != None and Menu.cur_menu.parent != None :
        target_menu = Menu.getMenu(Menu.cur_menu.parent.name)
    else:
        target_menu = Menu.getMenu(name_menu)

    if target_menu != None :
        bot.send_message(chat_id, text=target_menu.name, reply_markup=target_menu.markup)

        if target_menu.name == "–ò–≥—Ä–∞ –≤ 21" :
            global game21
            game21 = BotGames.Game21()
            text_game = game21.get_cards(2)
            bot.send_media_group(chat_id, media=getMediaCards(game21))
            bot.send_message(chat_id, text=text_game)

        elif target_menu.name == "–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞":
            GameRps = BotGames.newGame(chat_id, BotGames.GameRPS())
            text_game = "<b>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∞–≤–∏–ª–∞–º: </b>\n" \
                        "1. –ö–∞–º–µ–Ω—å > –ù–æ–∂–Ω–∏—Ü—ã\n" \
                        "2. –ë—É–º–∞–≥–∞ > –ö–∞–º–µ–Ω—å\n" \
                        "3. –ù–æ–∂–Ω–∏—Ü—ã > –ë—É–º–∞–≥–∞"
            bot.send_photo(chat_id, photo="https://media.istockphoto.com/photos/rock-paper-scissors-game-set-picture-id162675736", caption=text_game,
                           parse_mode='HTML')
        return True
    else:
        return False


def getMediaCards(game21):
    medias = []
    for url in game21.arr_cards_URL :
        medias.append(types.InputMediaPhoto(url))
    return medias


def send_help(chat_id) :
    global bot
    bot.send_message(chat_id, "–ê–≤—Ç–æ—Ä: –ì—Ä–∏–≥–æ—Ä–∏–π –ß–∞—Ö–æ–≤ üòé")
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="–ù–∞–ø–∏—à–∏—Ç–µ –∞–≤—Ç–æ—Ä—É",
                                      url="https://instagram.com/dreamofgregory")
    markup.add(btn1)
    img = open('me.jpg', 'rb')
    bot.send_photo(chat_id, img, reply_markup=markup)


def send_film(chat_id):
    film = get_randomFilm()
    info_str = f"<b>{film['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ']}</b>\n" \
               f"–ì–æ–¥: {film['–ì–æ–¥']}\n" \
               f"–°—Ç—Ä–∞–Ω–∞: {film['–°—Ç—Ä–∞–Ω–∞']}\n" \
               f"–ñ–∞–Ω—Ä: {film['–ñ–∞–Ω—Ä']}\n" \
               f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {film['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å']}"
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="–¢—Ä–µ–π–ª–µ—Ä", url=film["–¢—Ä–µ–π–ª–µ—Ä_url"])
    btn2 = types.InlineKeyboardButton(text="–°–ú–û–¢–†–ï–¢–¨ –æ–Ω–ª–∞–π–Ω", url=film["–§–∏–ª—å–º_url"])
    markup.add(btn1, btn2)
    bot.send_photo(chat_id, photo=film['–û–±–ª–æ–∂–∫–∞_url'], caption=info_str, parse_mode='HTML', reply_markup=markup)


def get_randomFilm() :
    url = 'https://randomfilm.ru/'
    infoFilm = {}
    req_film = requests.get(url)
    soup = bs4.BeautifulSoup(req_film.text, "html.parser")
    result_find = soup.find('div', align="center", style="width: 100%")
    infoFilm["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"] = result_find.find("h2").getText()
    names = infoFilm["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"].split(" / ")
    infoFilm["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ_rus"] = names[0].strip()
    if len(names) > 1 :
        infoFilm["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ_eng"] = names[1].strip()

    images = []
    for img in result_find.findAll('img'):
        images.append(url + img.get('src'))
    infoFilm["–û–±–ª–æ–∂–∫–∞_url"] = images[0]
    details = result_find.findAll('td')
    infoFilm["–ì–æ–¥"] = details[0].contents[1].strip()
    infoFilm["–°—Ç—Ä–∞–Ω–∞"] = details[1].contents[1].strip()
    infoFilm["–ñ–∞–Ω—Ä"] = details[2].contents[1].strip()
    infoFilm["–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"] = details[3].contents[1].strip()
    infoFilm["–†–µ–∂–∏—Å—Å—ë—Ä"] = details[4].contents[1].strip()
    infoFilm["–ê–∫—Ç—ë—Ä—ã"] = details[5].contents[1].strip()
    infoFilm["–¢—Ä–µ–π–ª–µ—Ä_url"] = url + details[6].contents[0]["href"]
    infoFilm["–§–∏–ª—å–º_url"] = url + details[7].contents[0]["href"]
    return infoFilm


def get_anekdot():
    array_anekdots = []
    req_anek = requests.get('http://anekdotme.ru/random')
    if req_anek.status_code == 200 :
        soup = bs4.BeautifulSoup(req_anek.text, "html.parser")
        result_find = soup.select('.anekdot_text')
        for result in result_find :
            array_anekdots.append(result.getText().strip())
    if len(array_anekdots) > 0 :
        return array_anekdots[0]
    else :
        return ""

def get_ManOrNot(chat_id):
    global bot

    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                                      url="https://vc.ru/dev/58543-thispersondoesnotexist-sayt-generator-realistichnyh-lic")
    markup.add(btn1)

    req = requests.get("https://thispersondoesnotexist.com/image", allow_redirects=True)
    if req.status_code == 200:
        img = BytesIO(req.content)
        bot.send_photo(chat_id, photo=img, reply_markup=markup, caption="–≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —Ä–µ–∞–ª–µ–Ω?")


def get_dogURL():
    url = ""
    req = requests.get('https://random.dog/woof.json')
    if req.status_code == 200:
        r_json = req.json()
        url = r_json["url"]
    return url

def get_nickname():
    array_names = []
    req_names = requests.get("https://ru.nickfinder.com")
    soup = bs4.BeautifulSoup(req_names.text, "html.parser")
    result_find = soup.findAll(class_='one_generated_variant vt_df_bg')
    for result in result_find :
        array_names.append(result.getText())
        return array_names[0]

def get_game():
    contents = requests.get('https://gamechart-app-default-rtdb.europe-west1.firebasedatabase.app/GameName.json').json()
    b = []
    for (k, v) in contents.items() :
        b.append(k)
    game = b[random.randint(0, len(b))]
    return game

bot.polling(none_stop=True, interval=0)

print()
